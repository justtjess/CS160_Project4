c0 {
    f0(a0 : integer) -> boolean {
        integer l0
        integer l1
        boolean l2
        integer l3, l4, l5, l6
        boolean l7, l8, l9, l10, l11
        print true <= f0(59)
        return f0(202)
        }
    f1(a0 : boolean) -> integer {
        print 0
        f1(true)
        return 48
        }
    }
c1 extends c0 {
    f0(a0 : integer) -> c0 {
        c0 l0
        f0(196)
        print 202 or f0(f0(44))
        return 245
        }
    f1() -> none {
        c0 l0, l1
        c0 l2, l3, l4, l5
        c0 l6, l7, l8, l9, l10, l11, l12, l13
        integer l14, l15
        integer l16
        while f1(f0(false)) {
            l14 = l9.f0(true)
            l6.f0(l5.f1(false, new c0, 16))
            }
        
        
        }
    }
