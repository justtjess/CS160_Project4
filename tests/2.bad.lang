c0 {
    boolean m0
    boolean m1
    f0(a0 : integer, a1 : integer, a2 : boolean) -> boolean {
        boolean l0, l1, l2, l3
        boolean l4, l5, l6, l7, l8
        integer l9, l10, l11
        f0(143)
        return false
        }
    }
c1 {
    c0 m0
    c0 m1
    c0 m2
    c0 m3
    c0 m4
    c0 m5
    c0 m6
    c0 m7
    c0 m8
    c0 m9
    c0 m10
    f0(a0 : c0) -> none {
        boolean throw, error, or, else
        c0 l6, l7, l8, l9, l10, l11, l12
        c0 l13
        c0 l14, l15, l16, l17, l18, l19
        c0 l20
        c0 l21, l22, l23, l24
        c0 l25, l26, l27
        integer l28, l29, l30, l31
        c0 l32, l33, l34, l35, l36, l37, l38
        while l38.m1 {
            print l28
            l14 f0(130)
            }
        
        
        }
    f1(a0 : c0, a1 : c0, a2 : c0) -> c0 {
        c0 l0, l1, l2
        c0 l3
        c0 l4, l5, l6
        c0 l7
        c0 l8
        c0 l9, l10, l11
        c0 l12, l13, l14, l15, l16, l17, l18, l19, l20, l21
        l11.m0 = -12
        l0.m1 = new c0
        return new c0
        }
    }
c2 extends c0 {
    f0() -> c0 {
        print f0(39, false) - true
        return f0(false)
        }
    f1() -> c0 {
        if new c1 {
            print true
            } else {
        f0(true)
        print new c0 ( new c1 ( new c1 ( f0(true) )  )  )  < 57
        }
        
        return new c0 ( new c1 ) 
        }
    }
c3 extends c2 {
    c1 m0
    c0 m1
    f0(a0 : integer, a1 : c1, a2 : c2) -> c1 {
        c2 l0, l1, l2, l3
        c2 l4, l5, l6, l7, l8, l9, l10, l11, l12, l13
        c0 l14, l15, l16, l17
        while new c1 {
            l10 f0(true or l1.m1)
            l17.m0 = true equals false
            }
        
        l1.m1 = l3.m0
        l6 f1(l1 f0(true))
        return 36
        }
    }
