c0 {
    boolean m0
    boolean m1
    boolean m2
    boolean m3
    boolean m4
    integer m5
    boolean m6
    boolean m7
    boolean m8
    boolean m9
    f0() -> boolean {
        integer l0, l1
        l1 = 42
        return 49
        }
    }
c1 extends c0 {
    f0(a0 : integer) -> integer {
        boolean l0, l1
        c0 l2, l3
        if l3.m5 and true {
            if 115 {
                f0(65)
                l3.m9 = f0(91)
                f0(new c0)
                } else {
            l3.m1 = l2.m4
            l0 = false
            l3.f0(true)
            l0 = new c0 ( new c0 ( l1 )  ) 
            l1 = 67
            }
            
            f0(l0)
            f0(new c0 ( f0(l2.f0(f0(new c0, new c0 ( true ) , l3.f0(l3.m4), f0(false), l1))), l3.f0(l2.f0(l1, l3.m8, true), false) ) )
            print f0(new c0 ( new c0 ) )
            } else {
        l3.m5 = new c0 ( false ) 
        l3.f0(true, (false))
        }
        
        print true
        return false - false
        }
    }
c2 {
    c0 m0
    c0 m1
    c0 m2
    }
c3 {
    c0 m0
    c1 m1
    c2 m2
    c2 m3
    c2 m4
    boolean m5
    f0(a0 : c0, a1 : c1, a2 : c0, a3 : integer, a4 : c1) -> c1 {
        c0 l0, l1
        if new c2 {
            l0.m6 = true
            print f0(f0(false, 158, false, true))
            }
        
        return not new c0
        }
    f1(a0 : c1) -> c2 {
        boolean l0, l1
        c1 l2
        c1 l3, l4, l5, l6, l7, l8
        while new c2 {
            l7.f0(true)
            l5.m8 = new c0 ( l7.m1 ) 
            }
        
        l6.f0(new c1 ( new c1 ( l2.f0(new c0 ( new c0 ( true ) , true ) ), 226 ) , new c0 ( 113 )  ) , true)
        l0 = true
        return l2.m8
        }
    }
