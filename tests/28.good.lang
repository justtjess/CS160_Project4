c0 {
    integer m0
    integer m1
    f0() -> integer {
        integer l0, l1, l2, l3
        integer l4, l5
        integer l6
        f0(60)
        return 117
        }
    }
c1 extends c0 {
    c0 m0
    c0 m1
    c0 m2
    integer m3
    boolean m4
    f0() -> c0 {
        c0 l0, l1
        c0 l2
        c0 l3, l4, l5, l6, l7
        l4.f0(new c0, l3.m0, new c0)
        return true and f0(new c0 ( false, l2.f0(new c0 ( true ) ) <= true ) , new c0 ( l6.m0 - new c0 ( new c0 )  ) )
        }
    }
c2 extends c1 {
    boolean m0
    boolean m1
    c0 m2
    c1 m3
    integer m4
    integer m5
    f0(a0 : c1, a1 : c0) -> c0 {
        print new c1 ( new c1 ) 
        while f0(f0(75), 27, 128) + new c0 {
            f0(false)
            f0(225)
            f0(true, new c1 ( 35 ) )
            }
        
        return new c0 / true
        }
    f1(a0 : integer, a1 : c1) -> none {
        integer l0, l1, l2, l3, l4
        l3 = false
        
        }
    }
c3 {
    c0 m0
    c1 m1
    f0(a0 : c0, a1 : c2, a2 : boolean, a3 : c0, a4 : c0, a5 : c0) -> c0 {
        f0(f0(false))
        f0(new c1, new c2, new c1 ( new c1, 82, new c1 )  * not 207)
        print new c2 ( f0(not false, new c2), f0(28 * 197, new c1 ( f0(true), 180 ) ) ) 
        return 22
        }
    }
