c0 {
    integer m0
    integer m1
    boolean m2
    integer m3
    integer m4
    integer m5
    integer m6
    integer m7
    integer m8
    boolean m9
    integer m10
    boolean m11
    f0(a0 : boolean) -> none {
        boolean l0, l1, l2
        integer l3, l4, l5
        
        }
    f1() -> integer {
        boolean l0, l1, l2, l3, l4
        while 69 {
            f0(true)
            f0(false)
            l0 = false * 61
            f1(l1)
            }
        
        f1(false)
        return false
        }
    }
c1 {
    f0() -> c0 {
        integer l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12
        l11 = new c0 ( l11, true ) 
        l5 = false
        return new c0 ( f0(false) )  and true
        }
    f1(a0 : c0, a1 : c0) -> c0 {
        c0 l0, l1, l2, l3, l4
        l3.f0(true, new c0 - l2.m5)
        return l2.m11
        }
    }
