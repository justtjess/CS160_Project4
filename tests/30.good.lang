c0 {
    boolean m0
    boolean m1
    integer m2
    integer m3
    boolean m4
    f0(a0 : boolean) -> boolean {
        while 255 {
            print true
            while 120 {
                print 82
                }
            
            }
        
        return true
        }
    }
c1 extends c0 {
    c0 m0
    c0 m1
    c0 m2
    c0 m3
    f0(a0 : c0) -> integer {
        c0 l0, l1, l2, l3, l4, l5
        l4.m2 = new c0 ( new c0 ( new c0, new c0, l3.m4, new c0 ( true <= new c0 ( l3.m1 )  )  ) , l2.m3 ) 
        return l2.f0(false, true)
        }
    }
c2 {
    c0 m0
    c1 m1
    boolean m2
    f0() -> integer {
        print 240 < 178
        return f0(new c0 ( new c0 ( new c0 ( 222 ) , 191 / 158 )  ) )
        }
    }
