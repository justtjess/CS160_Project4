c0 {
    integer m0
    integer m1
    integer m2
    boolean m3
    boolean m4
    f0(a0 : integer, a1 : boolean, a2 : boolean, a3 : boolean, a4 : boolean, a5 : integer, a6 : integer, a7 : boolean) -> integer {
        return 152
        }
    }
c1 {
    f0(a0 : c0, a1 : c0, a2 : c0) -> c0 {
        f0(130, false)
        print false and f0(f0(165, false), f0(false equals new c0), false, f0(true, true))
        return f0(true)
        }
    }
c2 extends c0 {
    f0(a0 : c1) -> c0 {
        c0 l0
        c1 l1
        c1 l2, l3, l4
        c1 l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16
        l11.f0(new c1 ( false, true, 134 ) )
        l0.m0 = -89
        return (34)
        }
    }
c3 extends c2 {
    f0() -> c2 {
        f0(true)
        return true < new c0
        }
    f1() -> c1 {
        return f0(103) or 44
        }
    f2(a0 : c1, a1 : c1) -> none {
        print new c1
        
        }
    }
c4 {
    f0(a0 : c1) -> c0 {
        print false
        print new c3
        return f0(new c3)
        }
    f1() -> none {
        c2 l0, l1, l2
        l0.f0(true)
        l2.m0 = true
        
        }
    }
