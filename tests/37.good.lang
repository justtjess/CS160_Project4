c0 {
    integer m0
    integer m1
    boolean m2
    integer m3
    boolean m4
    integer m5
    f0(a0 : boolean) -> integer {
        print false <= true
        return true < 15
        }
    }
c1 extends c0 {
    f0(a0 : c0) -> c0 {
        integer l0
        c0 l1, l2, l3, l4, l5
        c0 l6, l7, l8
        c0 l9, l10
        integer l11
        l3.m4 = l1.f0(false)
        l6.f0(false)
        l3.f0(46)
        return l9.f0(l3.f0(true)) <= new c0
        }
    }
c2 extends c1 {
    c0 m0
    c1 m1
    c0 m2
    integer m3
    integer m4
    c1 m5
    c0 m6
    c1 m7
    f0(a0 : c0) -> c0 {
        c1 l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13
        c1 l14
        c1 l15
        c1 l16, l17, l18
        while new c0 {
            l10.m3 = true - new c1
            l15.m3 = true
            while new c1 {
                f0(l3.f0(l16.m1))
                while new c1 {
                    l9.f0(false)
                    f0(false)
                    f0(false)
                    }
                
                while new c0 equals l13.m3 {
                    if 128 - new c0 {
                        if false - 249 {
                            l16.m2 = new c1 * new c0
                            l3.f0(l13.f0(50))
                            }
                        
                        l13.f0(l11.m5)
                        l16.m4 = true
                        l4.f0(new c1)
                        l8.m0 = 63
                        }
                    
                    l17.m4 = l4.m4
                    l11.f0(new c0)
                    }
                
                }
            
            }
        
        return true
        }
    }
c3 extends c1 {
    c1 m0
    c2 m1
    f0(a0 : c0, a1 : c0) -> c1 {
        while true {
            while 140 {
                print true
                print false
                print false
                }
            
            print true
            print 85
            print (f0(196 * f0(false)))
            }
        
        while false + new c2 or new c2 ( new c1 )  {
            f0(new c2)
            print true
            }
        
        return true
        }
    f1(a0 : integer) -> boolean {
        f0(new c0, true)
        print true
        print new c1 ( true ) 
        f0(new c2 ( true ) , true, 239)
        return false * new c2 ( 50 ) 
        }
    }
