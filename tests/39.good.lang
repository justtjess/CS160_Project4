c0 {
    }
c1 {
    c0 m0
    c0 m1
    boolean m2
    integer m3
    c0 m4
    f0(a0 : c0) -> c0 {
        c0 l0, l1
        f0(38, f0(new c0 ( new c0 ( new c0 )  equals new c0 ( f0(true) )  ) , 73 <= new c0, 205, new c0 ( f0(222) ) ), false)
        return 77 - 10
        }
    }
c2 {
    c0 m0
    f0() -> c0 {
        c1 l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14
        c1 l15, l16, l17, l18
        c1 l19, l20, l21, l22, l23, l24, l25, l26, l27
        c0 l28, l29, l30
        c1 l31
        c0 l32, l33, l34, l35
        if l25.f0(l7.f0(123, false) < 22, false) {
            l13.m4 = not l5.m4
            l26.f0(-true)
            l4.m3 = false
            }
        
        l12.f0(true)
        return new c1
        }
    }
c3 extends c2 {
    f0(a0 : c1) -> c0 {
        c2 l0, l1, l2
        l1.f0(new c0 ( new c2 equals false ) )
        return new c2 ( -43, new c2 ( new c2 ( true, true, true, 17 )  )  ) 
        }
    }
